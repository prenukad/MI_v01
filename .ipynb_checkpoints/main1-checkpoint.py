{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "29b97faf-8bf7-41ea-93f5-3f60623eb6ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import json\n",
    "import asyncio\n",
    "from datetime import datetime\n",
    "\n",
    "async def analyze_incident(incident_id, incident_data):\n",
    "    \"\"\"Analyze an incident using the MI Detection Agent\"\"\"\n",
    "    print(f\"\\n{'='*80}\")\n",
    "    print(f\"Analyzing Incident: {incident_id}\")\n",
    "    print(f\"{'='*80}\")\n",
    "    print(f\"Summary: {incident_data['summary']}\")\n",
    "    print(f\"Description: {incident_data['description']}\")\n",
    "    print(f\"Service: {incident_data['service_ci_name']}\")\n",
    "    print(f\"Priority: {incident_data['priority']}\")\n",
    "    print(f\"{'='*80}\\n\")\n",
    "    \n",
    "    # Create incident object\n",
    "    incident = Incident(\n",
    "        incident_id=incident_id,\n",
    "        summary=incident_data['summary'],\n",
    "        description=incident_data['description'],\n",
    "        service_ci_name=incident_data['service_ci_name'],\n",
    "        priority=incident_data['priority'],\n",
    "        created_at=incident_data['created_at'],\n",
    "        status=incident_data['status'],\n",
    "        assigned_to=incident_data['assigned_to'],\n",
    "        affected_users=incident_data.get('affected_users', [])\n",
    "    )\n",
    "    result = 0\n",
    "    # Print results\n",
    "    #print(f\"\\nAnalysis completed in {elapsed:.2f} seconds\")\n",
    "    print(f\"\\n{'='*80}\")\n",
    "    print(f\"DETECTION RESULT\")\n",
    "    print(f\"{'='*80}\")\n",
    "    print(f\"Major Incident: {'YES' if result==0 else 'NO'}\")\n",
    "    return result\n",
    "\t\n",
    "\t\t\n",
    "async def main():\n",
    "    \n",
    "    \n",
    "    # Define sample incidents to analyze\n",
    "    sample_incidents = {\n",
    "        \"INC123456\": {\n",
    "            \"summary\": \"CRM system unavailable for sales department\",\n",
    "            \"description\": \"Users in the sales department are unable to log in to the CRM system. The issue started approximately 30 minutes ago and is affecting all sales representatives.\",\n",
    "            \"service_ci_name\": \"CRM System\",\n",
    "            \"priority\": 2,\n",
    "            \"created_at\": \"2023-09-15T10:30:00\",\n",
    "            \"status\": \"In Progress\",\n",
    "            \"assigned_to\": \"Service Desk\",\n",
    "            \"affected_users\": [\"U001\", \"U002\", \"U003\", \"U010\"]\n",
    "        },\n",
    "        \"INC123457\": {\n",
    "            \"summary\": \"CRM system running slowly for single user\",\n",
    "            \"description\": \"One user in the marketing department is experiencing very slow response times when using the CRM system. Other users in the same department are not affected.\",\n",
    "            \"service_ci_name\": \"CRM System\",\n",
    "            \"priority\": 4,\n",
    "            \"created_at\": \"2023-09-15T11:45:00\",\n",
    "            \"status\": \"In Progress\",\n",
    "            \"assigned_to\": \"Service Desk\",\n",
    "            \"affected_users\": [\"U006\"]\n",
    "        }\n",
    "    }\n",
    "    \n",
    "    # Analyze each incident\n",
    "    results = {}\n",
    "    for incident_id, incident_data in sample_incidents.items():\n",
    "        is_major = await analyze_incident(incident_id, incident_data)\n",
    "        results[incident_id] = is_major\n",
    "    \n",
    "    # Print summary\n",
    "    print(f\"\\n{'='*80}\")\n",
    "    print(f\"ANALYSIS SUMMARY\")\n",
    "    print(f\"{'='*80}\")\n",
    "    for incident_id, is_major in results.items():\n",
    "        print(f\"Incident {incident_id}: {'Major Incident' if is_major else 'Regular Incident'}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c0ff6bbe-3374-4163-9d99-cfc27ab446cc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
